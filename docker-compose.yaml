version: "3.9"
services:
  # Base image containing dependencies.
  base:
    image: ${PROJECT_NAME}:base
    build:
      context: .
      dockerfile: docker/Dockerfile
      args:
        ROS_DISTRO: humble
      target: base
    # Interactive shell
    stdin_open: true
    tty: true
    # Networking and IPC for ROS 2
    network_mode: host
    ipc: host
    # Needed to display graphical applications
    privileged: True
    environment:
      # Allows graphical programs in the container.
      - DISPLAY=${DISPLAY}
      - QT_X11_NO_MITSHM=1
      - NVIDIA_DRIVER_CAPABILITIES=all
    volumes:
      # Allows graphical programs in the container.
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - ${XAUTHORITY:-$HOME/.Xauthority}:/root/.Xauthority

  # Overlay image containing the example source code.
  overlay:
    extends: base
    image: ${PROJECT_NAME}:overlay
    build:
      context: .
      dockerfile: docker/Dockerfile
      target: overlay

  # Developer container
  dev:
    extends: overlay
    image: ${PROJECT_NAME}:dev
    build:
      context: .
      dockerfile: docker/Dockerfile
      target: dev
      args:
        - UID=${UID:-1000}
        - GID=${UID:-1000}
        - USERNAME=${USERNAME:-devuser}
    volumes:
      # Mount the source code
      - ./mbzirc_lidar:/overlay_ws/src/mbzirc_lidar:rw
      - ./lidar_plane_filtering:/overlay_ws/src/lidar_plane_filtering:rw
      # Mount colcon build artifacts for faster rebuilds
      - ./.colcon/build/:/overlay_ws/build/:rw
      - ./.colcon/install/:/overlay_ws/install/:rw
      - ./.colcon/log/:/overlay_ws/log/:rw
    user: ${USERNAME:-devuser}
    command: sleep infinity

  ## Launches lidar container
  sick_lidar:
     extends: dev
     environment:
      - HOSTNAME=192.168.1.10
      - UDP_RECEIVER=192.168.1.1
     command: ros2 launch lidar_plane_filtering sick_multiscan.launch.py hostname:=192.168.1.10 udp_receiver_ip:=192.168.1.1 
      #- src/start_lidar_cycle.sh

  ## Launches the filtering algorithm
  plane_filter:
     extends: overlay
     command:  ros2 launch lidar_plane_filtering sensor_stack.launch.py

  ## Launches visualization
  viz:
     extends: dev
     command: rviz2 -d /overlay_ws/src/lidar_plane_filtering/config/sensor_stack.rviz
    
